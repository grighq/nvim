return {
	"nvim-treesitter/nvim-treesitter",
	build = ":TSUpdate",
	dependencies = {
		"nvim-treesitter/nvim-treesitter-textobjects",
	},
	opts = {
		ensure_installed = {
			"lua",
			"luadoc",
			"luap",
			"go",
			"gomod",
			"gowork",
			"gosum",
			"markdown",
			"markdown_inline",
			"git_config",
			"git_rebase",
			"gitcommit",
			"gitignore",
			"gitattributes",
			"diff",
			"vim",
			"vimdoc",
			"regex",
			"bash",
		},
		auto_install = true,
		sync_install = false,
		ignore_install = { "" },
		indent = { enable = true },
		highlight = {
			enable = true,
			additional_vim_regex_highlighting = false,
		},
		matchup = {
			enable = true,
		},
		incremental_selection = {
			enable = true,
			keymaps = {
				init_selection = "<cr>",
				node_incremental = "<cr>",
				scope_incremental = false,
				node_decremental = "<bs>",
			},
		},
		textobjects = {
			select = {
				enable = true,
				lookahead = true,
				keymaps = {
					["af"] = { query = "@function.outer", desc = "Around a function" },
					["if"] = { query = "@function.inner", desc = "Inner part of a function" },
					["ac"] = { query = "@class.outer", desc = "Around a class" },
					["ic"] = { query = "@class.inner", desc = "Inner part of a class" },
					["al"] = { query = "@loop.outer", desc = "Around a loop" },
					["il"] = { query = "@loop.inner", desc = "Inner part of a loop" },
					["ai"] = { query = "@conditional.outer", desc = "Around an if statement" },
					["ii"] = { query = "@conditional.inner", desc = "Inner part of an if statement" },
					["ap"] = { query = "@parameter.outer", desc = "Around parameter" },
					["ip"] = { query = "@parameter.inner", desc = "Inside a parameter" },
				},
				selection_modes = {
					["@function.outer"] = "v",
					["@class.outer"] = "<c-v>",
					["@loop.outer"] = "V",
					["@conditional.outer"] = "V",
					["@parameter.outer"] = "v",
					["@parameter.inner"] = "v",
				},
				include_surrounding_whitespace = false,
			},
			move = {
				enable = true,
				set_jumps = true,
				goto_next_start = {
					["]f"] = { query = "@function.outer", desc = "Next function" },
					["]c"] = { query = "@class.outer", desc = "Next class" },
					["]i"] = { query = "@conditional.outer", desc = "Next condition" },
					["]l"] = { query = "@loop.outer", desc = "Next loop" },
					["]]"] = { query = "@parameter.inner", desc = "Next parameter" },
				},
				goto_previous_start = {
					["[f"] = { query = "@function.outer", desc = "Previous function" },
					["[c"] = { query = "@class.outer", desc = "Previous class" },
					["[i"] = { query = "@conditional.outer", desc = "Previous condition" },
					["[l"] = { query = "@loop.outer", desc = "Previous loop" },
					["[["] = { query = "@parameter.inner", desc = "Previous parameter" },
				},
			},
		},
	},
	config = function(_, opts)
		require("nvim-treesitter.configs").setup(opts)
	end,
}
